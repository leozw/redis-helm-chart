{{- if eq .Values.architecture "standalone" }}
---
# Service for standalone mode
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.serviceName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    {{- with .Values.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if and .Values.service.loadBalancerIP (eq .Values.service.type "LoadBalancer") }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.service.type "LoadBalancer") .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range .Values.service.loadBalancerSourceRanges }}
    - {{ . }}
    {{- end }}
  {{- end }}
  {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy }}
  {{- end }}
  ports:
    - name: redis
      port: {{ .Values.service.port }}
      targetPort: redis
      protocol: TCP
      {{- if and (eq .Values.service.type "NodePort") .Values.service.nodePort }}
      nodePort: {{ .Values.service.nodePort }}
      {{- end }}
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
{{- end }}

{{- if eq .Values.architecture "replication" }}
---
# Service for master in replication mode
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.masterServiceName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: master
    {{- with .Values.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if and .Values.service.loadBalancerIP (eq .Values.service.type "LoadBalancer") }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.service.type "LoadBalancer") .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range .Values.service.loadBalancerSourceRanges }}
    - {{ . }}
    {{- end }}
  {{- end }}
  {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy }}
  {{- end }}
  ports:
    - name: redis
      port: {{ .Values.service.port }}
      targetPort: redis
      protocol: TCP
      {{- if and (eq .Values.service.type "NodePort") .Values.service.nodePort }}
      nodePort: {{ .Values.service.nodePort }}
      {{- end }}
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: master

---
# Service for replicas in replication mode
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.replicaServiceName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: replica
    {{- with .Values.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: redis
      port: {{ .Values.service.port }}
      targetPort: redis
      protocol: TCP
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: replica

---
# Headless service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.fullname" . }}-headless
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: redis
      port: {{ .Values.service.port }}
      targetPort: redis
      protocol: TCP
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
{{- end }}

{{- if .Values.metrics.enabled }}
---
# Service for metrics
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.fullname" . }}-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: {{ .Values.metrics.port }}
      targetPort: metrics
      protocol: TCP
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
{{- end }}

{{- if .Values.sentinel.enabled }}
---
# Service for Sentinel
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.fullname" . }}-sentinel
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: sentinel
spec:
  type: ClusterIP
  ports:
    - name: sentinel
      port: {{ .Values.sentinel.port }}
      targetPort: sentinel
      protocol: TCP
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: sentinel

---
# Headless service for Sentinel StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: {{ include "redis.fullname" . }}-sentinel-headless
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: sentinel
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: sentinel
      port: {{ .Values.sentinel.port }}
      targetPort: sentinel
      protocol: TCP
  selector:
    {{- include "redis.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: sentinel
{{- end }}